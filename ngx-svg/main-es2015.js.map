{"version":3,"sources":["./src/app/pages/rect/rect.component.html","./src/app/pages/rect/rect.component.ts","./src/app/pages/image/image.component.html","./src/app/pages/image/image.component.ts","./src/app/pages/line/line.component.html","./src/app/pages/line/line.component.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/pages/path/path.component.html","./src/app/pages/path/path.component.ts","./src/environments/environment.ts","./src/app/pages/text/text.component.html","./src/app/pages/text/text.component.ts","./src/app/pages/circle/circle.component.html","./src/app/pages/circle/circle.component.ts","./src/app/pages/ellipse/ellipse.component.html","./src/app/pages/ellipse/ellipse.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/polygon/polygon.component.html","./src/app/pages/polygon/polygon.component.ts","./src/app/app.module.ts","./src/app/pages/polyline/polyline.component.html","./src/app/pages/polyline/polyline.component.ts","./src/app/pages/grid/grid.component.ts","./src/app/pages/grid/grid.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<!-- Header of the rectangular -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Rectangular</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with rectangulars -->\n      <svg-container containerId=\"rectangular\" [height]=\"getHeight()\">\n        <svg-rect [height]=\"rectangular.height\" [width]=\"rectangular.width\" [color]=\"rectangular.color\"\n          [rx]=\"rectangular.rx\" [ry]=\"rectangular.ry\" [x]=\"rectangular.x\" [y]=\"rectangular.y\"\n          *ngFor=\"let rectangular of rectangulars\"></svg-rect>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg Rect configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Height</th>\n              <th>Width</th>\n              <th>Color</th>\n              <th>X position</th>\n              <th>Y position</th>\n              <th>X radius (rx)</th>\n              <th>Y radius (ry)</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"rectangulars.length > 0\">\n              <tr *ngFor=\"let rectangular of rectangulars; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"rectangular.height\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"rectangular.width\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"rectangular.color\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"rectangular.x\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"rectangular.y\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"rectangular.rx\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"rectangular.ry\" class=\"form-control\" />\n                </td>\n                <td>\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"rectangulars.length === 0\">\n              <td colspan=\"9\" class=\"text-center\">\n                There are no rectangulars\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"9\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New Rectangular</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Rectangular {\n  height: number;\n  width: number;\n  color?: string;\n  x?: number;\n  y?: number;\n  rx?: number;\n  ry?: number;\n}\n\n@Component({\n  templateUrl: 'rect.component.html'\n})\nexport class RectComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public rectangulars: Rectangular[] = [{\n    height: 100,\n    width: 200,\n    color: 'rgba(125, 125, 32, 0.5)',\n    x: 20,\n    y: 30,\n    rx: 0,\n    ry: 0\n  }, {\n    height: 50,\n    width: 50,\n    color: 'rgba(12, 32, 222, 0.7)',\n    x: 200,\n    y: 20,\n    rx: 10,\n    ry: 15\n  }];\n\n  /**\n   * Creates rect component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new rectangular element.\n   */\n  addNew() {\n    this.rectangulars.push({\n      height: 0,\n      width: 0,\n      color: '#000',\n      x: 0,\n      y: 0,\n      rx: 0,\n      ry: 0\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.rectangulars.map(el => el.height + el.y)) + 20;\n  }\n\n  /**\n   * Removes specific rectangular element.\n   * @param index - Index of rectangular element, which needs to be removed.\n   */\n  removeRow(index: number) {\n    this.rectangulars.splice(index, 1);\n  }\n}\n","<!-- Header of the image -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Image</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with images -->\n      <svg-container containerId=\"image\" [height]=\"getHeight()\">\n        <svg-image [imageUrl]=\"image.imageUrl\" [height]=\"image.height\" [width]=\"image.width\"\n          [x]=\"image.x\" [y]=\"image.y\" *ngFor=\"let image of images\"></svg-image>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg Image configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Image URL</th>\n              <th>X position</th>\n              <th>Y position</th>\n              <th>Width</th>\n              <th>Height</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"images.length > 0\">\n              <tr *ngFor=\"let image of images; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"image.imageUrl\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"image.x\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"image.y\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"image.width\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"image.height\" class=\"form-control\" />\n                </td>\n                <td>\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"images.length === 0\">\n              <td colspan=\"7\" class=\"text-center\">\n                There are no images\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"7\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New image</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Image {\n  imageUrl: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\n@Component({\n  templateUrl: 'image.component.html'\n})\nexport class ImageComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public images: Image[] = [{\n    imageUrl: 'ngx-svg/assets/dog.png',\n    x: 100,\n    y: 100,\n    width: 100,\n    height: 100\n  }];\n\n  /**\n   * Creates image component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new image element.\n   */\n  addNew() {\n    this.images.push({\n      imageUrl: 'ngx-svg/assets/dog.png',\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 100\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.images.map(el => el.height + el.y)) + 20;\n  }\n\n  /**\n   * Removes specific image element.\n   * @param index - Index of image, which needs to be removed.\n   */\n  removeRow(index: number) {\n    this.images.splice(index, 1);\n  }\n}\n","<!-- Header of the line -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Line</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with lines -->\n      <svg-container containerId=\"line\" [height]=\"getHeight()\">\n        <svg-line [borderSize]=\"line.borderSize\" [borderColor]=\"line.borderColor\"\n          [x0]=\"line.x0\" [y0]=\"line.y0\" [x1]=\"line.x1\" [y1]=\"line.y1\" *ngFor=\"let line of lines\"></svg-line>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg line configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Border Size</th>\n              <th>Border Color</th>\n              <th>X Start position</th>\n              <th>Y Start position</th>\n              <th>X End position</th>\n              <th>Y End position</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"lines.length > 0\">\n              <tr *ngFor=\"let line of lines; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"line.borderSize\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"line.borderColor\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"line.x0\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"line.y0\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"line.x1\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"line.y1\" class=\"form-control\" />\n                </td>\n                <td>\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"lines.length === 0\">\n              <td colspan=\"8\" class=\"text-center\">\n                There are no lines\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"8\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New line</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Line {\n  borderSize: number;\n  borderColor?: string;\n  x0?: number;\n  y0?: number;\n  x1?: number;\n  y1?: number;\n}\n\n@Component({\n  templateUrl: 'line.component.html'\n})\nexport class LineComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public lines: Line[] = [{\n    borderSize: 10,\n    borderColor: 'rgba(125, 125, 32, 0.5)',\n    x0: 20,\n    y0: 30,\n    x1: 55,\n    y1: 85\n  }, {\n    borderSize: 10,\n    borderColor: 'rgba(12, 32, 222, 0.7)',\n    x0: 30,\n    y0: 20,\n    x1: 85,\n    y1: 55\n  }, {\n    borderSize: 10,\n    borderColor: 'rgba(18, 52, 23, 0.7)',\n    x0: 20,\n    y0: 60,\n    x1: 50,\n    y1: 20\n  }];\n\n  /**\n   * Creates line component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new line element.\n   */\n  addNew() {\n    this.lines.push({\n      borderSize: 0,\n      borderColor: '#000',\n      x0: 0,\n      y0: 0,\n      x1: 1,\n      y1: 1\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.lines.map(el => {\n      if (el.y0 > el.y1) {\n        return el.y0;\n      } else {\n        return el.y1;\n      }\n    })) + 20;\n  }\n\n  /**\n   * Removes specific line element.\n   * @param index - Index of a line which needs to be removed.\n   */\n  removeRow(index: number) {\n    this.lines.splice(index, 1);\n  }\n}\n","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'home.component.html'\n})\nexport class HomeComponent {\n  /**\n   * Creates home component object instance.\n   */\n  constructor() { }\n}\n","<!-- Header of the home -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">ngx-svg</h1>\n    <p class=\"lead text-center\">Create powerful SVG objects with <a href=\"https://angular.io\" target=\"_blank\">Angular</a>. Based on <a href=\"http://svgjs.com\" target=\"_blank\">svg.js</a> library.</p>\n  </div>\n</div>\n\n<!-- Content of the home -->\n<div class=\"row no-gutters\">\n  <div class=\"col-12 col-sm-4 col-md-2\">\n    <div class=\"nav flex-column\" role=\"tablist\" aria-orientation=\"vertical\">\n      <a class=\"nav-link active\" data-toggle=\"pill\" href=\"#getting-started\" role=\"tab\" aria-controls=\"getting-started\" aria-selected=\"true\">Getting Started</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#installation\" role=\"tab\" aria-controls=\"installation\" aria-selected=\"false\">Installation</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#container\" role=\"tab\" aria-controls=\"container\" aria-selected=\"false\">Container</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#line\" role=\"tab\" aria-controls=\"line\" aria-selected=\"false\">Line</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#rectangular\" role=\"tab\" aria-controls=\"rectangular\" aria-selected=\"false\">Rectangular</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#circle\" role=\"tab\" aria-controls=\"circle\" aria-selected=\"false\">Circle</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#ellipse\" role=\"tab\" aria-controls=\"ellipse\" aria-selected=\"false\">Ellipse</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#polyline\" role=\"tab\" aria-controls=\"polyline\" aria-selected=\"false\">Polyline</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#polygon\" role=\"tab\" aria-controls=\"polygon\" aria-selected=\"false\">Polygon</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#image\" role=\"tab\" aria-controls=\"image\" aria-selected=\"false\">Image</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#path\" role=\"tab\" aria-controls=\"path\" aria-selected=\"false\">Path</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#text\" role=\"tab\" aria-controls=\"text\" aria-selected=\"false\">Text</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#classes\" role=\"tab\" aria-controls=\"text\" aria-selected=\"false\">Custom CSS Classes</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#troubleshooting\" role=\"tab\" aria-controls=\"troubleshooting\" aria-selected=\"false\">Troubleshooting</a>\n      <a class=\"nav-link\" data-toggle=\"pill\" href=\"#license\" role=\"tab\" aria-controls=\"license\" aria-selected=\"false\">License</a>\n    </div>\n  </div>\n  <div class=\"col-12 col-sm-8 col-md-10\">\n    <div class=\"tab-content\">\n      <!-- Getting started tab -->\n      <div class=\"tab-pane fade show active\" id=\"getting-started\" role=\"tabpanel\">\n        <h2>Getting Started</h2>\n        <p>ngx-svg contains all core svg.js components, so you won't need to include any other external dependencies.</p>\n      </div>\n\n      <!-- Installation tab -->\n      <div class=\"tab-pane fade\" id=\"installation\" role=\"tabpanel\">\n        <h2>Installation</h2>\n        <p>\n          To install ngx-svg, you have to run the following command from the terminal (you have to be within the project folder) -\n          <code>npm install ngx-svg --save</code>\n        </p>\n        <p>This will install the latest version of ngx-svg and add it to your project dependency list.</p>\n        <p>\n          After the installation you have to include the component in your module by importing it using the following command -\n          <code>import {{ '{' }} NgxSvgModule {{ '}' }} from 'ngx-svg';</code>\n        </p>\n        <p>Finally you have to add the <code>NgxSvgModule</code> to the imports of your module: </p>\n        <code>\n          @NgModule({{ '{' }}<br />\n            &emsp;declarations: [<br />\n              &emsp;&emsp;...<br />\n            &emsp;],<br />\n            &emsp;imports: [<br />\n              &emsp;&emsp;...<br />\n              &emsp;&emsp;NgxSvgModule<br />\n            &emsp;],<br />\n            &emsp;providers: [..],<br />\n            &emsp;bootstrap: [...]<br />\n          {{ '}' }})<br />\n          export class AppModule {{ '{' }} {{ '}' }}\n        </code>\n        <p></p>\n        <p>Afterwards you should be able to use the library in your application.</p>\n      </div>\n\n      <!-- Container tab -->\n      <div class=\"tab-pane fade\" id=\"container\" role=\"tabpanel\">\n        <h2>Container</h2>\n        <p>\n          To start using the ngx-svg you must declare a container object in one of your views, by using the following element:\n        </p>\n        <code>\n          &lt;svg-container containerId=\"svg-element\"&gt;<br />\n            &emsp;...<br />\n          &lt;/svg-container&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>containerId</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Unique ID for the svg container. Will be used for drawing the svg elements.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>height</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Height of the container in pixels.</td>\n              <td><b>NO</b></td>\n              <td><code>200</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>hoverable</td>\n              <td>Input parameter <code>(boolean)</code></td>\n              <td>Indicator if user should be able to see dot on hover, to capture coordinates.</td>\n              <td><b>NO</b></td>\n              <td><code>false</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>showGrid</td>\n              <td>Input parameter <code>(boolean)</code></td>\n              <td>Indicator if grid should be shown in the background of svg container.</td>\n              <td><b>NO</b></td>\n              <td><code>false</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>grid</td>\n              <td>Input parameter <code>(width: number, height: number, color: string)</code></td>\n              <td>Grid object that will be used to configure grid.</td>\n              <td><b>NO</b></td>\n              <td><code>&#123; width: 10, height: 10, color: #000 &#125;</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>pointSize</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Numeric value in pixels, to indicate how large should the point be.</td>\n              <td><b>NO</b></td>\n              <td><code>10</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>viewBox</td>\n              <td>Input parameter <code>(array of numbers)</code></td>\n              <td>Viewbox of the container, must be an array consisting of 4 integers [x, y, width, height].</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(x: number, y: number)</code></td>\n              <td>Is fired when click event happens on the dot element. Works only if <code>hoverable</code> input parameter is enabled.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(x: number, y: number)</code></td>\n              <td>Is fired when double click event happens on the dot element. Works only if <code>hoverable</code> input parameter is enabled.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>10</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the container.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>11</b></td>\n              <td>mouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse exits the container area.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>12</b></td>\n              <td>mouseMoveEvent</td>\n              <td>Output parameter <code>(x: number, y: number)</code></td>\n              <td>Is fired when mouse moves within the container area.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n        <p>Within one container you can enter as many elements as you want.</p>\n      </div>\n\n      <!-- Line tab -->\n      <div class=\"tab-pane fade\" id=\"line\" role=\"tabpanel\">\n        <h2>Line</h2>\n        <p>\n          To add a line element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-line&gt; &lt;/svg-line&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the line.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>borderSize</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Numeric value with the size of the border.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>borderColor</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Color of the border (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>x0</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>y0</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>x1</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Ending point on the x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>1</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>y1</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Ending point on the y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>1</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>10</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>11</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Rectangular tab -->\n      <div class=\"tab-pane fade\" id=\"rectangular\" role=\"tabpanel\">\n        <h2>Rectangular</h2>\n        <p>\n          To add a rectangular element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-rect&gt; &lt;/svg-rect&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the rectangular.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>height</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Height of the rectangular.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>width</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Width of the rectangular.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>color</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Background color of the rectangular (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>x</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>y</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>rx</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Radius for the x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>ry</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Radius for the y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>10</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>11</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>12</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Circle tab -->\n      <div class=\"tab-pane fade\" id=\"circle\" role=\"tabpanel\">\n        <h2>Circle</h2>\n        <p>\n          To add a circle element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-circle&gt; &lt;/svg-circle&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the circle.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>diameter</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Diameter of the circle.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>color</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Background color of the circle (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>x</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>y</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Ellipse tab -->\n      <div class=\"tab-pane fade\" id=\"ellipse\" role=\"tabpanel\">\n        <h2>Ellipse</h2>\n        <p>\n          To add a ellipse element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-ellipse&gt; &lt;/svg-ellipse&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the ellipse.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>height</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Height of the ellipse.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>width</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Width of the ellipse.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>color</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Background color of the ellipse (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>x</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>y</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on the y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>10</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Polyline tab -->\n      <div class=\"tab-pane fade\" id=\"polyline\" role=\"tabpanel\">\n        <h2>Polyline</h2>\n        <p>\n          To add a polyline element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-polyline&gt; &lt;/svg-polyline&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the polyline.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>points</td>\n              <td>Input parameter <code>(Array)</code></td>\n              <td>Array with an array of x,y points. For example [[0, 50], [50, 100], [100, 50], [50, 0], [0, 50]].</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>borderSize</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Size of the border for the polyline.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>borderColor</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Border color of the polyline (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>fill</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Fill color of the polyline (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Polygon tab -->\n      <div class=\"tab-pane fade\" id=\"polygon\" role=\"tabpanel\">\n        <h2>Polygon</h2>\n        <p>\n          To add a polygon element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-polygon&gt; &lt;/svg-polygon&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the polygon.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>points</td>\n              <td>Input parameter <code>(Array)</code></td>\n              <td>Array with an array of x,y points. For example [[0, 50], [50, 100], [100, 50], [50, 0], [0, 50]].</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>borderSize</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Size of the border for the polygon.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>borderColor</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Border color of the polygon (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>fill</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Fill color of the polygon (name, HEX, rgb).</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Image tab -->\n      <div class=\"tab-pane fade\" id=\"image\" role=\"tabpanel\">\n        <h2>Image</h2>\n        <p>\n          To add a image element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-image&gt; &lt;/svg-image&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the image.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n        \n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>imageUrl</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Path to the image for SVG image.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>x</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>y</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>height</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Height of the image.</td>\n              <td><b>NO</b></td>\n              <td><code>100</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>width</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Width of the image.</td>\n              <td><b>NO</b></td>\n              <td><code>100</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>10</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Path tab -->\n      <div class=\"tab-pane fade\" id=\"path\" role=\"tabpanel\">\n        <h2>Path</h2>\n        <p>\n          To add a path element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-path&gt; &lt;/svg-path&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the path.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n        \n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>path</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>A valid path which will be displayed.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>borderColor</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Border color which will be used for the path.</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>borderSize</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Border size which will be used for the path.</td>\n              <td><b>NO</b></td>\n              <td><code>2</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>x</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>y</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>fill</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Fill color of the path.</td>\n              <td><b>NO</b></td>\n              <td><code>''</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>10</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>11</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n        <p>Path uses complex data in string format to create the SVG. For more information, you can take a look at <a href=\"https://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">official SVG Path documentation</a>.</p>\n      </div>\n\n      <!-- Text tab -->\n      <div class=\"tab-pane fade\" id=\"text\" role=\"tabpanel\">\n        <h2>Text</h2>\n        <p>\n          To add a text element to the svg-container, you must add the following element inside the <code>svg-container</code> component tag -\n        </p>\n        <code>\n          &lt;svg-text&gt; &lt;/svg-text&gt;\n        </code>\n        <p></p>\n        <p>In the below table you can see explanation of the input and output parameters for the text.</p>\n        <table class=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Explanation</th>\n              <th>Mandatory</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n        \n          <tbody>\n            <tr>\n              <td><b>1</b></td>\n              <td>text</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Text that will be set for the element.</td>\n              <td><b>YES</b></td>\n              <td><code>undefined</code></td>\n            </tr>\n            <tr>\n              <td><b>2</b></td>\n              <td>color</td>\n              <td>Input parameter <code>(string)</code></td>\n              <td>Color of the text.</td>\n              <td><b>NO</b></td>\n              <td><code>'#000'</code></td>\n            </tr>\n            <tr>\n              <td><b>3</b></td>\n              <td>x</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on x axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>4</b></td>\n              <td>y</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Starting point on y axis.</td>\n              <td><b>NO</b></td>\n              <td><code>0</code></td>\n            </tr>\n            <tr>\n              <td><b>5</b></td>\n              <td>size</td>\n              <td>Input parameter <code>(number)</code></td>\n              <td>Size of the text.</td>\n              <td><b>NO</b></td>\n              <td><code>10</code></td>\n            </tr>\n            <tr>\n              <td><b>6</b></td>\n              <td>classes</td>\n              <td>Input parameter <code>(array of strings)</code></td>\n              <td>List of CSS classes which will be added.</td>\n              <td><b>NO</b></td>\n              <td><code>[]</code></td>\n            </tr>\n            <tr>\n              <td><b>7</b></td>\n              <td>clickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>8</b></td>\n              <td>doubleClickEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when double click event happens on the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>9</b></td>\n              <td>mouseOverEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved over the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n            <tr>\n              <td><b>10</b></td>\n              <td>MouseOutEvent</td>\n              <td>Output parameter <code>(MouseEvent)</code></td>\n              <td>Is fired when mouse is moved out of the element.</td>\n              <td><b>NO</b></td>\n              <td><code>N/A</code></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Custom CSS Classes tab -->\n      <div class=\"tab-pane fade\" id=\"classes\" role=\"tabpanel\">\n        <h2>Custom CSS Classes</h2>\n        <p>If you are using custom css classes, make sure that you define them using <code>::ng-deep</code> combinator, otherwise <code>ngx-svg</code> components won't see the classes.</p>\n        <p>To avoid leaking styles to other components, make sure to use <code>:host</code> combinator as well.</p>\n        <p>You can find more information on the <a href=\"https://angular.io/guide/component-styles\" target=\"_blank\">official Angular documentation</a>.</p>\n      </div>\n\n      <!-- Troubleshooting tab -->\n      <div class=\"tab-pane fade\" id=\"troubleshooting\" role=\"tabpanel\">\n        <h2>Troubleshooting</h2>\n        <p>In case of any questions or issues, please open a new question / issue on our <a href=\"https://github.com/vvaldersteins/ngx-svg/issues\" target=\"_blank\">GitHub repository</a>.</p>\n      </div>\n\n      <!-- License tab -->\n      <div class=\"tab-pane fade\" id=\"license\" role=\"tabpanel\">\n        <h2>License</h2>\n        <p>ngx-svg is developed under MIT license.</p>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: 'header.component.html'\n})\nexport class HeaderComponent {\n  /**\n   * Does all required pre-requisites and creates header component instance.\n   */\n  constructor() { }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink=\"/\">\n    ngx-svg <small class=\"extra-small\"><i>v1.2.1</i></small>\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#main-navigation\" aria-controls=\"main-navigation\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"main-navigation\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/home\">Home</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/rect\">Rect</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/circle\">Circle</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/ellipse\">Ellipse</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/line\">Line</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/polyline\">Polyline</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/polygon\">Polygon</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/image\">Image</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/path\">Path</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/text\">Text</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/grid\">Grid</a>\n      </li>\n    </ul>\n    <a class=\"btn btn-dark\" href=\"https://github.com/vvaldersteins/ngx-svg\" target=\"_blank\"><i class=\"fab fa-github\"></i> GitHub</a>\n    <a class=\"btn btn-dark\" href=\"https://www.npmjs.com/package/ngx-svg\" target=\"_blank\"><i class=\"fab fa-npm\"></i> NPM</a>\n  </div>\n</nav>","<!-- Header of the path -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Path</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with paths -->\n      <svg-container containerId=\"path\" [height]=\"getHeight()\">\n        <svg-path [borderSize]=\"path.borderSize\" [borderColor]=\"path.borderColor\" [fill]=\"path.fill\"\n          [x]=\"path.x\" [y]=\"path.y\" [path]=\"path.path\" *ngFor=\"let path of paths\"></svg-path>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg patb configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Path</th>\n              <th>Border Size</th>\n              <th>Border Color</th>\n              <th>X position</th>\n              <th>Y position</th>\n              <th>Fill</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"paths.length > 0\">\n              <tr *ngFor=\"let path of paths; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"path.path\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"path.borderSize\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"path.borderColor\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"path.x\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"path.y\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"path.fill\" class=\"form-control\" />\n                </td>\n                <td>\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"paths.length === 0\">\n              <td colspan=\"8\" class=\"text-center\">\n                There are no paths\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"8\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New path</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Path {\n  path: string;\n  borderSize?: number;\n  borderColor?: string;\n  x?: number;\n  y?: number;\n  fill?: string;\n}\n\n@Component({\n  templateUrl: 'path.component.html'\n})\nexport class PathComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public paths: Path[] = [{\n    path: 'M10 80 C 40 10, 65 10, 95 80 S 150 150, 180 80',\n    borderSize: 4,\n    borderColor: 'rgba(125, 125, 32, 0.5)',\n    x: 20,\n    y: 30,\n    fill: ''\n  }];\n\n  /**\n   * Creates path component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new path element.\n   */\n  addNew() {\n    this.paths.push({\n      path: '',\n      borderSize: 2,\n      borderColor: '#000',\n      x: 0,\n      y: 0,\n      fill: ''\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.paths.map(el =>\n      el.y +\n      Math.max.apply(Math, el.path.replace(/[^0-9 ]/g, '').replace(/\\s\\s+/g, ' ').split(' ').filter((element, index) => index % 2 !== 0)))\n    ) + 20;\n  }\n\n  /**\n   * Removes specific path element.\n   * @param index - Index of a path which needs to be removed.\n   */\n  removeRow(index: number) {\n    this.paths.splice(index, 1);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!-- Header of the text -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Text</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with texts -->\n      <svg-container containerId=\"text\" [height]=\"getHeight()\">\n        <svg-text [size]=\"text.size\" [text]=\"text.text\" [color]=\"text.color\"\n          [x]=\"text.x\" [y]=\"text.y\" *ngFor=\"let text of texts\"></svg-text>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg Text configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Text</th>\n              <th>Color</th>\n              <th>Size</th>\n              <th>X position</th>\n              <th>Y position</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"texts.length > 0\">\n              <tr *ngFor=\"let text of texts; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"text.text\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"text.color\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"text.size\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"text.x\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"text.y\" class=\"form-control\" />\n                </td>\n                <td>\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"texts.length === 0\">\n              <td colspan=\"7\" class=\"text-center\">\n                There are no texts\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"7\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New Text</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Text {\n  text: string;\n  size?: number;\n  color?: string;\n  x?: number;\n  y?: number;\n}\n\n@Component({\n  templateUrl: 'text.component.html'\n})\nexport class TextComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public texts: Text[] = [{\n    text: 'Wow! This is awesome text with an opacity!',\n    size: 30,\n    color: 'rgba(125, 125, 32, 0.5)',\n    x: 20,\n    y: 30\n  }, {\n    text: 'Texts can have different sizes, positions and colors!',\n    size: 10,\n    color: 'rgba(12, 32, 222, 0.7)',\n    x: 200,\n    y: 80\n  }];\n\n  /**\n   * Creates text component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new text element.\n   */\n  addNew() {\n    this.texts.push({\n      text: '',\n      size: 10,\n      color: '#000',\n      x: 0,\n      y: 0\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.texts.map(el => el.y + el.size)) + 20;\n  }\n\n  /**\n   * Removes specific text element.\n   * @param index - Index of text element, which needs to be removed.\n   */\n  removeRow(index: number) {\n    this.texts.splice(index, 1);\n  }\n}\n","<!-- Header of the circle -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Circle</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with circles -->\n      <svg-container containerId=\"circle\" [height]=\"getHeight()\">\n        <svg-circle [diameter]=\"circle.diameter\" [color]=\"circle.color\"\n          [x]=\"circle.x\" [y]=\"circle.y\" *ngFor=\"let circle of circles\"></svg-circle>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg Circle configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Diameter</th>\n              <th>Color</th>\n              <th>X position</th>\n              <th>Y position</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"circles.length > 0\">\n              <tr *ngFor=\"let circle of circles; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"circle.diameter\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"circle.color\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"circle.x\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"circle.y\" class=\"form-control\" />\n                </td>\n                <td>\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"circles.length === 0\">\n              <td colspan=\"6\" class=\"text-center\">\n                There are no circles\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"6\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New circle</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Circle {\n  diameter: number;\n  color?: string;\n  x?: number;\n  y?: number;\n}\n\n@Component({\n  templateUrl: 'circle.component.html'\n})\nexport class CircleComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public circles: Circle[] = [{\n    diameter: 45,\n    color: 'rgba(125, 125, 32, 0.5)',\n    x: 20,\n    y: 30\n  }, {\n    diameter: 30,\n    color: 'rgba(12, 32, 222, 0.7)',\n    x: 70,\n    y: 30\n  }];\n\n  /**\n   * Creates circle component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new circle element.\n   */\n  addNew() {\n    this.circles.push({\n      diameter: 0,\n      color: '#000',\n      x: 0,\n      y: 0\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.circles.map(el => el.diameter + el.y)) + 30;\n  }\n\n  /**\n   * Removes specific circle element.\n   * @param index - Index of circle, which needs to be removed.\n   */\n  removeRow(index: number) {\n    this.circles.splice(index, 1);\n  }\n}\n","<!-- Header of the ellipse -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Ellipse</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with ellipses -->\n      <svg-container containerId=\"ellipse\" [height]=\"getHeight()\">\n        <svg-ellipse [height]=\"ellipse.height\" [width]=\"ellipse.width\" [color]=\"ellipse.color\"\n          [x]=\"ellipse.x\" [y]=\"ellipse.y\" *ngFor=\"let ellipse of ellipses\"></svg-ellipse>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg Ellipse configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Height</th>\n              <th>Width</th>\n              <th>Color</th>\n              <th>X position</th>\n              <th>Y position</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"ellipses.length > 0\">\n              <tr *ngFor=\"let ellipse of ellipses; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"ellipse.height\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"ellipse.width\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"string\" [(ngModel)]=\"ellipse.color\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"ellipse.x\" class=\"form-control\" />\n                </td>\n                <td>\n                  <input type=\"number\" [(ngModel)]=\"ellipse.y\" class=\"form-control\" />\n                </td>\n                <td>\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"ellipses.length === 0\">\n              <td colspan=\"7\" class=\"text-center\">\n                There are no ellipses\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"7\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New ellipse</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Ellipse {\n  height: number;\n  width: number;\n  color?: string;\n  x?: number;\n  y?: number;\n}\n\n@Component({\n  templateUrl: 'ellipse.component.html'\n})\nexport class EllipseComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public ellipses: Ellipse[] = [{\n    height: 50,\n    width: 100,\n    color: 'rgba(125, 125, 32, 0.5)',\n    x: 20,\n    y: 30\n  }, {\n    height: 70,\n    width: 50,\n    color: 'rgba(12, 32, 222, 0.7)',\n    x: 100,\n    y: 20\n  }];\n\n  /**\n   * Creates ellipse component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new ellipse element.\n   */\n  addNew() {\n    this.ellipses.push({\n      height: 0,\n      width: 0,\n      color: '#000',\n      x: 0,\n      y: 0\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.ellipses.map(el => el.height * 2 + el.y)) + 20;\n  }\n\n  /**\n   * Removes specific ellipses element.\n   * @param index - Index of ellipse, which needs to be removed.\n   */\n  removeRow(index: number) {\n    this.ellipses.splice(index, 1);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngx-svg-demo';\n}\n","<!-- App Header -->\n<app-header></app-header>\n\n<!-- Router content -->\n<router-outlet></router-outlet>","<!-- Header of the polygon -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Polygon</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with lines -->\n      <svg-container containerId=\"polygon\" [height]=\"getHeight()\">\n        <svg-polygon [borderSize]=\"polygon.borderSize\" [borderColor]=\"polygon.borderColor\"\n          [fill]=\"polygon.fill\" [points]=\"polygon.points\" *ngFor=\"let polygon of polygons\"></svg-polygon>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg line configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Border Size</th>\n              <th>Border Color</th>\n              <th>Fill Color</th>\n              <th class=\"text-center\">Points</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"polygons.length > 0\">\n              <tr *ngFor=\"let polygon of polygons; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td class=\"align-middle\">\n                  <input type=\"number\" [(ngModel)]=\"polygon.borderSize\" class=\"form-control\" />\n                </td>\n                <td class=\"align-middle\">\n                  <input type=\"string\" [(ngModel)]=\"polygon.borderColor\" class=\"form-control\" />\n                </td>\n                <td class=\"align-middle\">\n                  <input type=\"string\" [(ngModel)]=\"polygon.fill\" class=\"form-control\" />\n                </td>\n                <td>\n                  <tr>\n                    <th>X point</th>\n                    <th>Y point</th>\n                    <th>Actions</th>\n                  </tr>\n\n                  <ng-container *ngIf=\"polygon.points.length > 0\">\n                    <tr *ngFor=\"let point of polygon.points; let pointIndex = index;\">\n                      <td>\n                        <input type=\"number\" [(ngModel)]=\"point[0]\" class=\"form-control\" />\n                      </td>\n                      <td>\n                        <input type=\"number\" [(ngModel)]=\"point[1]\" class=\"form-control\" />\n                      </td>\n                      <td>\n                        <button class=\"btn btn-danger\" (click)=\"removePoint(polygon, pointIndex)\">Remove</button>\n                      </td>\n                    </tr>\n                  </ng-container>\n\n                  <tr *ngIf=\"polygon.points.length === 0\">\n                    <td colspan=\"3\">\n                      There are no points for this polygon\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td colspan=\"3\">\n                      <button class=\"btn btn-success float-right\" (click)=\"addNewPoint(polygon)\">Add New Point</button>\n                    </td>\n                  </tr>\n                </td>\n                <td class=\"align-middle\">\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"polygons.length === 0\">\n              <td colspan=\"6\" class=\"text-center\">\n                There are no polygons\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"6\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New polygon</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Polygon {\n  borderSize: number;\n  borderColor?: string;\n  fill?: string;\n  points: number[][];\n}\n\n@Component({\n  templateUrl: 'polygon.component.html'\n})\nexport class PolygonComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public polygons: Polygon[] = [{\n    borderSize: 2,\n    borderColor: 'rgba(125, 125, 32, 0.5)',\n    fill: 'rgba(100, 100, 20, 0.2)',\n    points: [[10, 100], [100, 100], [100, 10], [10, 10]]\n  }, {\n    borderSize: 3,\n    borderColor: 'rgba(23, 25, 255, 1)',\n    fill: 'rgba(0, 0, 0, 0)',\n    points: [[200, 150], [210, 190], [250, 200], [210, 210], [200, 250], [190, 210], [150, 200], [190, 190]]\n  }];\n\n  /**\n   * Creates polygon component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new polygon element.\n   */\n  addNew() {\n    this.polygons.push({\n      borderSize: 0,\n      borderColor: '#000',\n      points: [[]]\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.polygons.map(el => {\n      let maxValue;\n      const max = Math.max.apply(Math, el.points.map(point => {\n        if (maxValue === undefined || (maxValue !== undefined && point[1] > maxValue)) {\n          maxValue = point[1];\n        }\n\n        return maxValue;\n      }));\n\n      return max;\n    })) + 20;\n  }\n\n  /**\n   * Adds new points element at the end of the list.\n   * @param polygon - Polygon object for which to add new points element.\n   */\n  addNewPoint(polygon: Polygon) {\n    polygon.points.push([]);\n  }\n\n  /**\n   * Removes a specific point from the points list.\n   * @param polygon - Polygon object for which point needs to be removed.\n   * @param index - Index which needs to be removed.\n   */\n  removePoint(polygon: Polygon, index: number) {\n    polygon.points.splice(index, 1);\n  }\n\n  /**\n   * Removes specific polygon element.\n   * @param index - Index which needs to be removed\n   */\n  removeRow(index: number) {\n    this.polygons.splice(index, 1);\n  }\n}\n","/**\n * Import Angular libraries.\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\n/**\n * Import third-party libraries.\n */\nimport { NgxSvgModule } from 'ngx-svg';\n\n/**\n * Import custom components.\n */\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\n\n/**\n * Import custom pages.\n */\nimport { HomeComponent } from './pages/home/home.component';\nimport { RectComponent } from './pages/rect/rect.component';\nimport { CircleComponent } from './pages/circle/circle.component';\nimport { LineComponent } from './pages/line/line.component';\nimport { EllipseComponent } from './pages/ellipse/ellipse.component';\nimport { PolylineComponent } from './pages/polyline/polyline.component';\nimport { PolygonComponent } from './pages/polygon/polygon.component';\nimport { ImageComponent } from './pages/image/image.component';\nimport { PathComponent } from './pages/path/path.component';\nimport { TextComponent } from './pages/text/text.component';\nimport { GridComponent } from './pages/grid/grid.component';\n\n/**\n * Define page routes.\n */\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'rect', component: RectComponent },\n  { path: 'circle', component: CircleComponent },\n  { path: 'line', component: LineComponent },\n  { path: 'ellipse', component: EllipseComponent },\n  { path: 'polyline', component: PolylineComponent },\n  { path: 'polygon', component: PolygonComponent },\n  { path: 'image', component: ImageComponent },\n  { path: 'path', component: PathComponent },\n  { path: 'text', component: TextComponent },\n  { path: 'grid', component: GridComponent },\n  { path: '', pathMatch: 'full', redirectTo: '/home' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    RectComponent,\n    CircleComponent,\n    LineComponent,\n    EllipseComponent,\n    PolylineComponent,\n    PolygonComponent,\n    ImageComponent,\n    PathComponent,\n    TextComponent,\n    GridComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\n    NgxSvgModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- Header of the polyline -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Polyline</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with lines -->\n      <svg-container containerId=\"polyline\" [height]=\"getHeight()\">\n        <svg-polyline [borderSize]=\"polyline.borderSize\" [borderColor]=\"polyline.borderColor\"\n          [fill]=\"polyline.fill\" [points]=\"polyline.points\" *ngFor=\"let polyline of polylines\"></svg-polyline>\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg line configuration -->\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Border Size</th>\n              <th>Border Color</th>\n              <th>Fill Color</th>\n              <th class=\"text-center\">Points</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf=\"polylines.length > 0\">\n              <tr *ngFor=\"let polyline of polylines; let index = index;\">\n                <td class=\"align-middle\">\n                  <b>{{ index + 1 }}</b>\n                </td>\n                <td class=\"align-middle\">\n                  <input type=\"number\" [(ngModel)]=\"polyline.borderSize\" class=\"form-control\" />\n                </td>\n                <td class=\"align-middle\">\n                  <input type=\"string\" [(ngModel)]=\"polyline.borderColor\" class=\"form-control\" />\n                </td>\n                <td class=\"align-middle\">\n                  <input type=\"string\" [(ngModel)]=\"polyline.fill\" class=\"form-control\" />\n                </td>\n                <td>\n                  <tr>\n                    <th>X point</th>\n                    <th>Y point</th>\n                    <th>Actions</th>\n                  </tr>\n\n                  <ng-container *ngIf=\"polyline.points.length > 0\">\n                    <tr *ngFor=\"let point of polyline.points; let pointIndex = index;\">\n                      <td>\n                        <input type=\"number\" [(ngModel)]=\"point[0]\" class=\"form-control\" />\n                      </td>\n                      <td>\n                        <input type=\"number\" [(ngModel)]=\"point[1]\" class=\"form-control\" />\n                      </td>\n                      <td>\n                        <button class=\"btn btn-danger\" (click)=\"removePoint(polyline, pointIndex)\">Remove</button>\n                      </td>\n                    </tr>\n                  </ng-container>\n\n                  <tr *ngIf=\"polyline.points.length === 0\">\n                    <td colspan=\"3\">\n                      There are no points for this polyline\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td colspan=\"3\">\n                      <button class=\"btn btn-success float-right\" (click)=\"addNewPoint(polyline)\">Add New Point</button>\n                    </td>\n                  </tr>\n                </td>\n                <td class=\"align-middle\">\n                  <button class=\"btn btn-danger\" (click)=\"removeRow(index)\">Remove</button>\n                </td>\n              </tr>\n            </ng-container>\n            <tr *ngIf=\"polylines.length === 0\">\n              <td colspan=\"6\" class=\"text-center\">\n                There are no polylines\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"6\">\n                <button class=\"btn btn-success float-right\" (click)=\"addNew()\">Add New polyline</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Polyline {\n  borderSize: number;\n  borderColor?: string;\n  fill?: string;\n  points: number[][];\n}\n\n@Component({\n  templateUrl: 'polyline.component.html'\n})\nexport class PolylineComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public polylines: Polyline[] = [{\n    borderSize: 2,\n    borderColor: 'rgba(125, 125, 32, 0.5)',\n    fill: 'rgba(100, 100, 20, 0.2)',\n    points: [[10, 100], [100, 100], [100, 10], [10, 10], [10, 100]]\n  }, {\n    borderSize: 3,\n    borderColor: 'rgba(23, 25, 255, 1)',\n    fill: 'rgba(0, 0, 0, 0)',\n    points: [[200, 150], [210, 190], [250, 200], [210, 210], [200, 250], [190, 210], [150, 200], [190, 190]]\n  }];\n\n  /**\n   * Creates polyline component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Adds new polyline element.\n   */\n  addNew() {\n    this.polylines.push({\n      borderSize: 0,\n      borderColor: '#000',\n      points: [[]]\n    });\n  }\n\n  /**\n   * Retrieves the maximum height of all elements.\n   * @returns Height of the container.\n   */\n  getHeight(): number {\n    return Math.max.apply(Math, this.polylines.map(el => {\n      let maxValue;\n      const max = Math.max.apply(Math, el.points.map(point => {\n        if (maxValue === undefined || (maxValue !== undefined && point[1] > maxValue)) {\n          maxValue = point[1];\n        }\n\n        return maxValue;\n      }));\n\n      return max;\n    })) + 20;\n  }\n\n  /**\n   * Adds new points element at the end of the list.\n   * @param polyline - Polyline object for which to add new points element.\n   */\n  addNewPoint(polyline: Polyline) {\n    polyline.points.push([]);\n  }\n\n  /**\n   * Removes a specific point from the points list.\n   * @param polyline - Polyline object for which point needs to be removed.\n   * @param index - Index which needs to be removed.\n   */\n  removePoint(polyline: Polyline, index: number) {\n    polyline.points.splice(index, 1);\n  }\n\n  /**\n   * Removes specific polyline element.\n   * @param index - Index which needs to be removed\n   */\n  removeRow(index: number) {\n    this.polylines.splice(index, 1);\n  }\n}\n","/**\n * Import Angular libraries.\n */\nimport { Component } from '@angular/core';\n\ninterface Grid {\n  width: number;\n  height: number;\n  strokeColor: string;\n}\n\n@Component({\n  templateUrl: 'grid.component.html'\n})\nexport class GridComponent {\n  /**\n   * Globally used variables within the component.\n   */\n  public showGrid = true;\n  public grid: Grid = {\n    width: 10,\n    height: 10,\n    strokeColor: '#000'\n  };\n\n  /**\n   * Creates grid component object instance.\n   */\n  constructor() { }\n\n  /**\n   * Does all required pre-requisites and updates the grid object.\n   */\n  updateGrid() {\n    this.grid = Object.assign({}, this.grid);\n  }\n}\n","<!-- Header of the grid -->\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4 text-center\">Grid</h1>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12\">\n      <!-- Svg Container with grid -->\n      <svg-container containerId=\"grid\" [showGrid]=\"showGrid\" [grid]=\"grid\">\n      </svg-container>\n    </div>\n\n    <div class=\"col-12\">\n      <!-- Svg grid configuration section -->\n      <label>Display grid</label>\n      <input type=\"checkbox\" [(ngModel)]=\"showGrid\" class=\"form-control\" />\n\n      <label>Grid box width</label>\n      <input type=\"number\" [(ngModel)]=\"grid.width\" (change)=\"updateGrid()\" class=\"form-control\" />\n\n      <label>Grid box height</label>\n      <input type=\"number\" [(ngModel)]=\"grid.height\" (change)=\"updateGrid()\" class=\"form-control\" />\n\n      <label>Grid box stroke color</label>\n      <input type=\"string\" [(ngModel)]=\"grid.strokeColor\" (change)=\"updateGrid()\" class=\"form-control\" />\n\n      <button class=\"btn btn-primary mt-3\" (click)=\"updateGrid()\">Update Grid</button>\n    </div>\n  </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}